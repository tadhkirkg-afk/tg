import os

from aiogram import Router, F, Bot
from aiogram.filters import Command, ChatMemberUpdatedFilter, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, CallbackQuery, \
    FSInputFile, ChatMemberUpdated
from aiogram.utils.keyboard import InlineKeyboardBuilder
from asgiref.sync import sync_to_async
from aiogram.types import ChatJoinRequest
from aiogram.filters.chat_member_updated import ChatMemberUpdatedFilter, IS_MEMBER
from tg.models import TelegramUser, Wait
from .text import sister_text, brother_text

router = Router()
CHANNEL_ID = -1002378894473
MESSAGE_ID = 20
@router.message(Command("start"))
async def start_command(msg: Message, command: CommandObject, bot: Bot):
    user, created = await sync_to_async(TelegramUser.objects.get_or_create)(user_id=msg.from_user.id)
    user.username = msg.from_user.username
    user.first_name = msg.from_user.first_name
    user.last_name = msg.from_user.last_name
    user.save()
    a = command.args if command else None
    if a == "material":
        forwarded  = await bot.forward_message(chat_id=user.user_id, from_chat_id=CHANNEL_ID, message_id=MESSAGE_ID)

        text = (
            "üìñ *–ü—Ä–∏ –¥–æ–ª–∂–Ω–æ–º —É—Å–µ—Ä–¥–∏–∏ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ* —Å —ç—Ç–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º –í—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —á–∏—Ç–∞—Ç—å –ö–æ—Ä–∞–Ω –ø–æ —Å–ª–æ–≥–∞–º, *–∏–Ω—à–∞-–õ–ª–∞ÃÅ—Ö*.\n\n"
            "üí° *–ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º* –Ω–∞—á–∞—Ç—å —á–∏—Ç–∞—Ç—å –ö–æ—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Å–≤–æ–∏—Ç–µ *–ø—Ä–∞–≤–∏–ª–∞ –¢–∞–¥–∂–≤–∏–¥–∞*."
        )
        await bot.send_message(chat_id=user.user_id,text=text,reply_to_message_id=forwarded.message_id, parse_mode="Markdown")
        builder = InlineKeyboardBuilder()
        if user.gender == "M":
            builder.add(InlineKeyboardButton(text="üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="awaiting_brother"))
            await msg.answer(brother_text, parse_mode="Markdown", reply_markup=builder.as_markup())
        elif user.gender == "F":
            builder.add(InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/aysha_5663"))
            await msg.answer(sister_text, parse_mode="Markdown", reply_markup=builder.as_markup())
        else:
            text2 = (
                "üìö *–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—É—á–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–µ —Å –æ–ø—ã—Ç–Ω—ã–º –£—Å—Ç–∞–∑–æ–º –∏–ª–∏ –£—Å—Ç–∞–∑–æ–π, "
                "–º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω.*\n\n"
                "üë• –í –≥—Ä—É–ø–ø–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
                "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
                "‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —á—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞\n"
                "‚Ä¢ –£—Å–≤–∞–∏–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¢–∞–¥–∂–≤–∏–¥–∞ –±—ã—Å—Ç—Ä–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –≥—Ä—É–ø–ø–æ–≤–æ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é\n\n"
                "‚ú® *–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –≥—Ä—É–ø–ø—É, —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –ø–æ–ª:*"
            )
            builder.add(InlineKeyboardButton(text="ü§µ‚Äç‚ôÇÔ∏è –Ø –ë—Ä–∞—Ç", callback_data="im_brother"))
            builder.add(InlineKeyboardButton(text="üßï –Ø –°–µ—Å—Ç—Ä–∞", callback_data="im_sister"))
            builder.adjust(2)
            await msg.answer(text2, reply_markup=builder.as_markup(), parse_mode="Markdown")
    else:
        builder = InlineKeyboardBuilder()
        if user.gender == "M":
            builder.add(InlineKeyboardButton(text="üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="awaiting_brother"))
            await msg.answer(brother_text, parse_mode="Markdown", reply_markup=builder.as_markup())
        elif user.gender == "F":
            builder.add(InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/aysha_5663"))
            await msg.answer(sister_text, parse_mode="Markdown", reply_markup=builder.as_markup())
        else:
            text2 = (
                "üìö *–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—É—á–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–µ —Å –æ–ø—ã—Ç–Ω—ã–º –£—Å—Ç–∞–∑–æ–º –∏–ª–∏ –£—Å—Ç–∞–∑–æ–π, "
                "–º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω.*\n\n"
                "üë• –í –≥—Ä—É–ø–ø–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
                "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
                "‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —á—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞\n"
                "‚Ä¢ –£—Å–≤–∞–∏–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¢–∞–¥–∂–≤–∏–¥–∞ –±—ã—Å—Ç—Ä–µ–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –≥—Ä—É–ø–ø–æ–≤–æ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é\n\n"
                "‚ú® *–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –≥—Ä—É–ø–ø—É, —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –ø–æ–ª:*"
            )
            builder.add(InlineKeyboardButton(text="ü§µ‚Äç‚ôÇÔ∏è –Ø –ë—Ä–∞—Ç", callback_data="im_brother"))
            builder.add(InlineKeyboardButton(text="üßï –Ø –°–µ—Å—Ç—Ä–∞", callback_data="im_sister"))
            builder.adjust(2)
            await msg.answer(text2, reply_markup=builder.as_markup(), parse_mode="Markdown")
    # if created:
    #     builder = InlineKeyboardBuilder()
    #     builder.add(InlineKeyboardButton(text="–Ø –ë—Ä–∞—Ç", callback_data="new_user_brother"))
    #     builder.add(InlineKeyboardButton(text="–Ø –°–µ—Å—Ç—Ä–∞", callback_data="new_user_sister"))
    #     builder.adjust(2)
    #     text = "–°–∞–ª—è–º –ê–ª–µ–π–∫—É–º, –¥–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è"
    #     await msg.answer(text, reply_markup=builder.as_markup())

@router.callback_query(F.data == "awaiting_brother")
async def awaiting_brother(call: CallbackQuery):
    user, created = await sync_to_async(TelegramUser.objects.get_or_create)(user_id=call.from_user.id)
    wait, created = await sync_to_async(Wait.objects.get_or_create)(user=user)
    await call.answer("–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –æ –∑–∞–Ω—è—Ç–∏—è—Ö", show_alert=True)

@router.message(Command("brothers"))
async def brothers(msg: Message, bot: Bot):
    brothers = await sync_to_async(Wait.objects.all)()
    text = ""
    count = 0
    for brother in brothers:
        text += f"{brother.user.first_name} {brother.user.last_name}\n"
        count += 1
    await msg.answer(f"{count}")
    await msg.answer(text)

@router.message(Command("sisters"))
async def sisters(msg: Message, bot: Bot):
    sisters = await sync_to_async(TelegramUser.objects.filter)(gender="F")
    text = ""
    count = 0
    if sisters:
        for sister in sisters:
            text += f"{sister.first_name} {sister.last_name}\n"
            count += 1
        await msg.answer(f"{count}")
        await msg.answer(text)

@router.chat_join_request()
async def chat_join_request(event: ChatJoinRequest):
    user_id = event.from_user.id
    try:
        # user, created = await sync_to_async(TelegramUser.objects.get_or_create)(user_id=user_id)
        # user.username = event.from_user.username
        # user.first_name = event.from_user.first_name
        # user.last_name = event.from_user.last_name
        # user.save()

        full_name = event.from_user.full_name
        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª", url="https://t.me/An_Nur_robot?start=material"))
        text = (
            f"üåô –ê—Å—Å–∞–ª—è–º—É –∞–ª–µ–π–∫—É–º, *{full_name}*! \n\n"
            "–î–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–¥–∏—Ç –≤–∞—Å –ê–ª–ª–∞—Ö –∑–∞ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –Ω–∞—É—á–∏—Ç—å—Å—è —á–∏—Ç–∞—Ç—å –ö–æ—Ä–∞–Ω –∏ –ø—É—Å—Ç—å –ê–ª–ª–∞—Ö –æ–±–ª–µ–≥—á–∏—Ç –≤–∞–º –æ–±—É—á–µ–Ω–∏–µ. –ê–º–∏–Ω—å! ü§≤\n\n"
            "üìñ –û—Ç –£—Å–º–∞–Ω–∞ (–¥–∞ –±—É–¥–µ—Ç –¥–æ–≤–æ–ª–µ–Ω –∏–º –ê–ª–ª–∞—Ö) –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è, —á—Ç–æ –ü—Ä–æ—Ä–æ–∫ Ô∑∫ —Å–∫–∞–∑–∞–ª:\n"
            "*¬´–õ—É—á—à–∏–π –∏–∑ –≤–∞—Å ‚Äî —Ç–æ—Ç, –∫—Ç–æ –æ–±—É—á–∞–µ—Ç—Å—è –ö–æ—Ä–∞–Ω—É –∏ –æ–±—É—á–∞–µ—Ç –µ–º—É –¥—Ä—É–≥–∏—Ö¬ª*\n\n"
            "_[–î–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–π] - [–ü–µ—Ä–µ–¥–∞–ª –∞–ª—å-–ë—É—Ö–∞—Ä–∏] - [ÿµÿ≠Ÿäÿ≠ ÿßŸÑÿ®ÿÆÿßÿ±Ÿä - 5027]_"
        )
        await event.bot.send_message(
            chat_id=user_id,
            text=text, reply_markup=builder.as_markup(), parse_mode="Markdown")
    except Exception:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} ‚Äî –æ–Ω –Ω–µ –Ω–∞—á–∞–ª —á–∞—Ç —Å –±–æ—Ç–æ–º.")

    await event.approve()

@router.callback_query(F.data == "im_brother")
async def im_brother(call: CallbackQuery):
    await call.message.delete()
    user, created = await sync_to_async(TelegramUser.objects.get_or_create)(user_id=call.from_user.id)
    user.username = call.from_user.username
    user.first_name = call.from_user.first_name
    user.last_name = call.from_user.last_name
    user.gender = "M"
    await sync_to_async(user.save)()
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="awaiting_brother"))
    await call.message.answer(brother_text, parse_mode="Markdown", reply_markup=builder.as_markup())

@router.callback_query(F.data == "im_sister")
async def im_siser(call: CallbackQuery):
    user, created = await sync_to_async(TelegramUser.objects.get_or_create)(user_id=call.from_user.id)
    user.username = call.from_user.username
    user.first_name = call.from_user.first_name
    user.last_name = call.from_user.last_name
    user.gender = "F"
    user.save()
    await call.message.delete()
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/aysha_5663"))
    await call.message.answer(sister_text, parse_mode="Markdown", reply_markup=builder.as_markup())

class PostState(StatesGroup):
    awaiting_text = State()

class SendToSistersState(StatesGroup):
    awaiting_text = State()

@router.message(Command("send_sisters"))
async def sisters(msg: Message, state: FSMContext, bot: Bot):
    await msg.answer("–í–∞—à —Ç–µ–∫—Å—Ç:")
    await state.set_state(SendToSistersState.awaiting_text)

@router.message(SendToSistersState.awaiting_text)
async def send_to_sisters(msg: Message, bot: Bot, state: FSMContext):
    sisters = await sync_to_async(TelegramUser.objects.filter)(gender="F")
    good = 0
    fault = 0
    for sister in sisters:
        try:
            await bot.send_message(chat_id=sister.user_id, text=msg.text)
            good += 1
        except Exception as e:
            fault += 1
            print(e)
    await msg.answer(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {good} —Å—ë—Å—Ç—Ä–∞–º\n–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {fault} —Å—ë—Å—Ç—Ä–∞–º")
    await state.clear()


@router.message(Command("post"))
async def new_post(msg: Message, state: FSMContext):
    # user = await sync_to_async(TelegramUser.objects.get)(user_id=msg.from_user.id)
    # if user.admin:
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:")
    await state.set_state(PostState.awaiting_text)

@router.message(PostState.awaiting_text)
async def post_awaiting_text(msg: Message, state: FSMContext, bot: Bot):
    user_id = "@An_Nur_Official"
    try:
        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(text="‚òÄÔ∏è ùóîùó°-ùó°ùó®ùó• üåô [—Ö·¥Ä–¥–∏·¥Ñ—ã, ·¥Ä—è·¥õ—ã]", url="https://t.me/+f9fH25BXvLYwMDFi"))
        copy = await bot.copy_message(chat_id=user_id, from_chat_id=msg.chat.id, message_id=msg.message_id, reply_markup=builder.as_markup())
        await bot.send_message(
            chat_id=user_id,
            text=msg.text)
        await state.clear()
    except Exception as e:
        print(e)


# @router.chat_member(ChatMemberUpdatedFilter(member_status_changed=IS_MEMBER))
# async def on_user_subscribe(event: ChatMemberUpdated, bot: Bot, state: FSMContext):
#     user = event.from_user
#
#     try:
#         await bot.send_message(user.id, f"–ê—Å—Å–∞–ª—è–º—É –∞–ª–µ–π–∫—É–º, {user.first_name}! üåô –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!")
#     except Exception as e:
#         print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")
